import tl = require('azure-pipelines-task-lib/task');

async function run() {
  try {
    const projectPath: string | undefined = tl.getInput('projectPath', false);
    var exec = require('child_process').exec;

    exec('dotnet list C:\\MyGit\\Personal\\VulnerabilityTest\\**\\*.csproj package --vulnerable --include-transitive', function callback(error: any, stdout: any, stderr: any) {
      if (error) {
        tl.setResult(tl.TaskResult.Failed, 'Task failed with error: ' + error);
        return;
      }

      if (stderr) {
        tl.setResult(tl.TaskResult.Failed, 'Task failed with stderr: ' + stderr);
        return;
      }

      const text = stdout as string;
      if (checkCliReturnContainsWarnings(text)) {
        tl.setResult(tl.TaskResult.Failed, text);
        return;
      }

      tl.setResult(tl.TaskResult.Succeeded, 'All ok');
    });
  }
  catch (err: any) {
    tl.setResult(tl.TaskResult.Failed, 'Task failed with exception: ' + err.message);
  }
}

function checkCliReturnContainsWarnings(text: string): boolean {
  return true;
}

run();